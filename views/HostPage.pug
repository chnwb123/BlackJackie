html
    head
        title= title
        link(rel="stylesheet", href="/css/HostPage.css")
        script(src="https://cdn.socket.io/4.5.4/socket.io.min.js")
    body
        .host-container
            .left-panel
                div#player-list
                    h4 Players in this game:
                    ul#players
            .right-panel
                h2 Scan the Below QR Code to Join the Game.
                h3 #{sessionId}
                img(src=qrCode, alt="", height="200", width="200")
                div#game-status
                    p#player-count Players: 0/5
                    p#game-state Waiting for players...
                button#start-game(disabled) Start Game
        script.
            const socket = io();
            const sessionId = '#{sessionId}';
            
            // Host monitors the game session (doesn't join as a player)
            console.log('Host connecting to session:', sessionId);
            socket.emit('hostMonitorSession', {
                sessionId: sessionId
            });
            
            // Listen for player updates
            socket.on('playerJoined', (data) => {
                console.log('Host received playerJoined:', data);
                updatePlayerList(data.players);
                updateGameStatus(data.totalPlayers);
            });
            
            socket.on('playerLeft', (data) => {
                console.log('Host received playerLeft:', data);
                updatePlayerList(data.players);
                updateGameStatus(data.totalPlayers);
            });
            
            // Listen for game started
            socket.on('gameStarted', (data) => {
                updatePlayerList(data.players);
                document.getElementById('game-state').textContent = `Game Started! Dealer: ${data.dealer.name}`;
                document.getElementById('start-game').disabled = true;
            });
            
            // Handle start game button click
            document.getElementById('start-game').addEventListener('click', () => {
                socket.emit('startGame', { sessionId: sessionId });
            });
            
            function updatePlayerList(players) {
                const playersList = document.getElementById('players');
                playersList.innerHTML = '';
                
                players.forEach(player => {
                    const li = document.createElement('li');
                    li.textContent = player.name + (player.isDealer ? ' (Dealer)' : '');
                    playersList.appendChild(li);
                });
            }
            
            function updateGameStatus(playerCount) {
                document.getElementById('player-count').textContent = `Players: ${playerCount}/5`;
                
                // Enable start button if there are 2+ players (for testing)
                const startButton = document.getElementById('start-game');
                if (playerCount >= 2) {
                    startButton.disabled = false;
                    document.getElementById('game-state').textContent = 'Ready to start!';
                } else {
                    startButton.disabled = true;
                    document.getElementById('game-state').textContent = 'Waiting for more players...';
                }
            }

            socket.on('gameStarted', (data) => {
                console.log('Game started!', data);
                console.log('Dealer:', data.dealer.name);
                console.log('Current Round:', data.currentRound);
                
                document.body.innerHTML = `
                    <div style="text-align: center; padding: 50px;">
                        <h2>Game Starting!</h2>
                        <p>Redirecting to host dashboard...</p>
                    </div>
                `;
                
                // Small delay to ensure data is processed
                setTimeout(() => {
                    const gameplayUrl = `/Gameplay_Host_Dashboard?sessionId=${sessionId}&round=${data.currentRound}`;
                    window.location.href = gameplayUrl;
                }, 5000);
            });
